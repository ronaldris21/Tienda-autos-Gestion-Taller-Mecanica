<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="openFileDialog1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>